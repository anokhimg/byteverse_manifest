version: 0.1.0
jobId: "7"
jobName: Weather API Test Manifest creation
jobType: Source Aligned Data Product
alias: Load_final_state
discoveryPort:
  name: Weather API Test Manifest creation
  description: ""
  category: ""
  image: https://google.com
  autofillUserinfo: ""
  tags: []
  extra: {}
inputPorts:
  - alias: Weather_1
    description: Weather
    tags: []
    extra: {}
    syncType: pull
    type: s3-csv
    dataSetUrn: urn:dv:dataset:f4814824-5819-44ba-ac1d-4dc9a279a58a
    filter: ""
    projection: []
    dataProductUrn: ""
    persistDataFrame: false
productState:
  alias: Load_final_state
  refreshInterval: ""
  retentionVersions: ""
  updateStrategy: append
  logicalSchema:
    properties:
      City:
        type: STRING
      Region:
        type: STRING
      Country:
        type: STRING
      Latitude:
        type: STRING
      Longitude:
        type: STRING
      Timezone:
        type: STRING
      Local Time:
        type: STRING
      Cloud ID:
        type: STRING
      Feels like Celcius:
        type: STRING
      Feels like fahrenheit:
        type: STRING
      Gust speed in kph:
        type: STRING
      Gust speed in mph:
        type: STRING
      Humidity:
        type: STRING
      Is day time?:
        type: STRING
      Last update:
        type: STRING
      Last updated time in epoch:
        type: STRING
      Precipitation in inch:
        type: STRING
      Precipitation in mm:
        type: STRING
      Pressure:
        type: STRING
      Precipitation in mb:
        type: STRING
      Temperature in celcius:
        type: STRING
      Temperature in fahrenheit:
        type: STRING
      UV:
        type: STRING
      Visibility in km:
        type: STRING
      Visibility in miles:
        type: STRING
      Wind Degree:
        type: STRING
      Wind Direction:
        type: STRING
      Wind in kph:
        type: STRING
      Wind in mph:
        type: STRING
  enforceSchemaMethod: ""
  enforceSchema: true
  updateStrategyOptions: {}
  isProfilingEnabled: false
  tableName: Weather
  stateStoreType: iceberg
transformation:
  - alias: Spark_SQL_1
    type: SQL
    description: Select all data
    query: select * from weather
    references:
      - alias: Weather_1
        sqlReference: weather
controlPort:
  dataQualityRules: {}
outputPort:
  subscriptionChannels:
    - channelType: JDBC
      queryType: SQL
